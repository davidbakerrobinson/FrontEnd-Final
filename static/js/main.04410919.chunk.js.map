{"version":3,"sources":["use_spoon_home.js","Home_Card.js","Image_Home.js","HomeImageGrid.js","useSearch.js","AppNavbar.js","Home.js","useSearchFood.js","AppSearchFood.js","AppTDEE.js","MacroCalculator.js","RecipeBody.js","Recipe.js","usePixaBay.js","AppFoodCarousel.js","useSearchNutrients.js","AppFoodNutrients.js","useSpoonacular.js","AppSpoonacularFoodGallery.js","Ingredient.js","Compare.js","App.js","reportWebVitals.js","index.js"],"names":["use_spoon_home","url_array","stateChange","f","promises","responses","i","push","axios","get","then","results","Promise","allSettled","full_items","filter","item","status","data","totalResults","to_add","JSON","stringify","sessionStorage","setItem","HomeCard","setLink","setCompare","info","src","key","alt","compare","index","setRemoved","useState","open","setOpen","target","useRef","warning","setWarning","Card","onMouseEnter","onMouseLeave","Img","className","Collapse","in","Body","Title","Button","ref","onMouseOut","onClick","length","Overlay","current","show","placement","props","Tooltip","to","array","getItem","decoded_array","parse","splice","put_back","ImageHome","toCompare","console","log","randomInt","max","Math","floor","random","HomeImageGrid","food_type","to_skip","columnCount","food_type_array","split","food_type_length","rand_type_index","num_to_skip","decoded_length","column_length","ceil","columns","column_per_page","data_array","entry_limit","Col","image","title","id","rows","column_count","grid_array","Row","Container","useSearch","initialValue","value","setValue","onChange","e","AppNavbar","changeRecipe","searchProps","resetSearch","Searched","setSearched","Navbar","Brand","href","Nav","Link","Form","onSubmit","event","preventDefault","query","encoded_query","encodeURI","to_url","catch","error","alert","FormControl","type","placeholder","variant","Home","set_my_Array","compare_list","map","Image","remove_compare","icon","faTrashAlt","useSearchFood","name","count","setData","isPending","setIsPending","setError","empty","setEmpty","useEffect","abortController","AbortController","url","encodeURIComponent","fetch","signal","res","ok","Error","json","foods","food","foodNutrients","nutrient","nutrientName","unitName","toLowerCase","err","message","abort","AppSearchFood","TDEE","setQuery","selections","setSelections","totalEnergy","setTotalEnergy","updateWithQuantity","selection","fdcId","parseInt","dataset","quantity","total","energy","reduce","prev","curr","Stack","filterBy","isLoading","labelKey","minLength","onSearch","options","option","found","match","find","text","description","brandOwner","clear","renderMenuItemChildren","Table","striped","bordered","hover","min","style","width","result","str","consumedCal","AppTDEE","onTDEE","height","setHeight","weight","setWeight","age","setAge","activityLevel","setActivityLevel","gender","setGender","BMR","activity","FloatingLabel","controlId","label","Control","required","Select","direction","Check","inline","MacroCalculator","tdee","setTDEE","gap","color","RecipeBody","changeIngredient","showButton","forcompare","ingredients","nutrition","recipe_steps_arr","analyzedInstructions","steps","nutrients_array","nutrients","recipe_steps","step","ingredients_arr","fluid","xs","md","sm","homepage","old_home","unshift","new_home","Header","ListGroup","Item","action","Subtitle","amount","unit","Recipe","usePixaBay","hits","photo","webformatURL","AppFoodCarousel","Alert","Placeholder","as","animation","Carousel","link","useSearchNutrients","AppFoodNutrients","unitNameFormat","resultFilter","includes","filterNutrition","useSpoonacular","ingredient","AppSpoonacularFoodGallery","recipe","Figure","thumbnail","objectFit","Caption","Ingredient","ingredientName","Compare","App","recipeInfo","setrecipeInfo","setIngredientName","removed","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04410919.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst use_spoon_home = (url_array, stateChange=f=>f)=> {\n\n    //use axios to get data from API\n   \n    let promises = [];\n    let responses = [];\n\n    for(let i = 0; i < 12; ++i) {\n        promises.push(axios.get(url_array[i]).then((results)=> {\n            responses.push(results);\n        })\n        );\n    }\n\n    Promise.allSettled(promises).then((results)=>{\n        //console.log(`These are my promise results: ${results}`);\n        \n        //maybe want to give user warning disabled sessionStorage?\n        //want to remove the items with 0 total_Results\n        let full_items = responses.filter((item)=> {\n            return (item.status === 200 && item.data.totalResults > 0);\n        });\n        let to_add = JSON.stringify(full_items);\n        sessionStorage.setItem('Home_Page_Array',to_add);\n        stateChange(full_items);\n    });\n   \n\n};\n\nexport default use_spoon_home;","//used to show image/expand on hover\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Card, Collapse, Button, Overlay, Tooltip} from \"react-bootstrap\";\nimport { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function HomeCard({setLink, setCompare, info, src, key, alt, compare, index, setRemoved}) {\n    let [open, setOpen] = useState(false);\n    let target = useRef(null);\n    let [warning, setWarning] = useState(false);\n    return(\n        <Card onMouseEnter={()=>setOpen(true)} onMouseLeave={()=>setOpen(false)}>\n            <Card.Img className=\"col-img\" src={src} key={key} alt={alt} />\n            <Collapse in={open}>\n                <Card.Body className=\"active\">\n                    <Card.Title>{alt}</Card.Title>\n                    <Button\n                    ref={target} \n                    onMouseOut={()=>setWarning(false)}\n                    onClick={()=>{\n                        if(compare.length < 2)\n                            setCompare(info);\n                        else {\n                            //I want a tooltip\n                            setWarning(true);\n                        }\n                        setLink(info);\n                    }} \n                    className=\"btn-success\">\n                        Compare\n                    </Button>\n                    <Overlay target={target.current} show={warning} placement=\"bottom\">\n                        {(props)=> {\n                            return(\n                                <Tooltip {...props} >\n                                    Only two recipes are permitted\n                                </Tooltip>\n                            );\n                        }}\n                    </Overlay>\n                    <Link to=\"/recipe\">\n                    <Button onClick={()=>setLink(info)} className=\"btn-primary\">Info</Button>\n\n                    </Link>\n                    <Button onClick={()=>{\n                        let array = sessionStorage.getItem(\"Home_Page_Array\");\n                        let decoded_array = JSON.parse(array);\n                        decoded_array.splice(index,1);\n                        let put_back = JSON.stringify(decoded_array);\n                        sessionStorage.setItem(\"Home_Page_Array\",put_back);\n                        setRemoved();\n                    }} \n                    className=\"btn-danger\">\n                        Remove\n                    </Button>                 \n                </Card.Body>\n            </Collapse>\n        </Card>\n    );\n}\n\n\n","import \"./ImageHome.css\";\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button } from \"react-bootstrap\";\nimport HomeCard from \"./Home_Card\";\n\nfunction ImageHome({setLink, info, src, alt, toCompare, compare, index, setRemoved=f=>f}) {\n    console.log(`I am in the image definition\n    and the data is\n    ${info.data}\n    `);\n    return(\n        // <Link\n        // to='/recipe'\n        // >\n        // <Card onClick={()=>setLink(info)}>\n        //     <Card.Img className=\"col-img\" src={src} key={key} alt={alt} />\n        //         <figcaption>{alt}</figcaption>\n        // </Card>\n        <HomeCard setRemoved={setRemoved} index={index} compare={compare} setCompare={toCompare} src={src} alt={alt} info={info} setLink={setLink} />\n        // </Link>\n    );\n}\n\nexport default ImageHome;","import {useState, useEffect} from 'react';\nimport use_spoon_home from './use_spoon_home';\nimport \"./HomeImageArray.css\";\nimport ImageHome from './Image_Home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n\n//This file is used to get recipes and there associated images\n//from the Spoonacular API\n\nfunction randomInt(max) {\n    return Math.floor(Math.random()*max);\n}\n\nfunction food_object(food_type, cuisine_name) {\n    this.food_type = food_type;\n    this.cuisine_name = cuisine_name;\n}\n\nfunction to_url(food_type, to_skip) {\n    let url = `https://api.spoonacular.com/recipes/complexSearch?apiKey=145e78a54cd247a3aa402896abfbbc1a&type=${food_type}&offset=${to_skip}&addRecipeInformation=true&addRecipeNutrition=true&number=1`;\n    return url;\n}\n\n\nconst HomeImageGrid = ({stateChange = f=>f, setLink=f=>f, toCompare=f=>f, columnCount, compare, setRemoved})  => {\n    //otherwise, I want to hard code request to the API for 10 different cuisine types\n    //Should occur once at the start of the program\n\n    if(sessionStorage.getItem('Home_Page_Array') === null) {\n        //const cuisine_string = \"African American British Cajun Caribbean Chinese Eastern%20European European French German Greek Indian Irish Italian Japanese Jewish Korean Latin%20American Mediterranean Mexican Middle%20Eastern Southern Spanish Thai Vietnamese\";\n        //const cuisine_array = cuisine_string.split(\" \");\n\n        const food_type_string = \"main%20course side%20dish\";\n        const food_type_array = food_type_string.split(\" \");\n\n        //I want a loop to add 12 different random cuisines from cuisine\n        //array to empty array and have a random type paired with them\n\n        console.log(\"I be in dat conditional render do\");\n\n        //I will use a list of urls\n        let url_array = [];\n        let food_type_length = food_type_array.length;\n        //let cuisine_array_length = cuisine_array.length;\n        for(let i=0; i < 18; i++) {\n            //let rand_cuisine_index = randomInt(cuisine_array_length);\n            let rand_type_index = randomInt(food_type_length);\n            let num_to_skip = randomInt(900);\n            //populate url_array with the proper queries\n            url_array.push(to_url(food_type_array[rand_type_index],num_to_skip));\n            \n        }\n        //console.log(`This is array of urls I searched: ${url_array}`);\n        //url list is found, now we need to call our axios fetch thing\n        //useSpoonacular\n        //misleading name, so add home at end: use_spoon_home\n        use_spoon_home(url_array, stateChange);\n        return (<h1>Images are loading...</h1>);\n    }\n    // if(sessionStorage.getItem('Home_Page_Array') === null)\n    // {\n    //     return <h1>Images are loading...</h1>\n    // }\n    else\n    {\n        //break up images into three arrays, each 33% of the total flex\n        //size\n       \n        let array = sessionStorage.getItem('Home_Page_Array');\n        let decoded_array = JSON.parse(array);\n        let decoded_length = decoded_array.length;\n        let column_length = Math.ceil((decoded_array.length)/columnCount);\n        console.log(column_length);\n\n        function columns(index, column_per_page, data_array) {\n            let array = [];\n            let entry_limit = column_per_page*index + column_per_page;\n            for(let i = index * column_per_page; i<entry_limit; ++i) {\n                //console.log(\"yep\");\n                if(i < decoded_length) {\n                let item = data_array[i];\n                array.push(\n                <Col key={i}>\n                <ImageHome setRemoved={setRemoved} index={i} compare={compare} setLink={setLink} toCompare={toCompare}  info={item} src={item.data.results[0].image} key={item.data.results[0].id} alt={`${item.data.results[0].title}`} />\n                </Col>\n                );\n                \n            }\n            else {\n                array.push(\n                    <Col key={i}></Col>\n                );\n            }\n            }\n            return array;\n        }\n        \n        function rows(column_length, data_array, column_count) {\n            let grid_array = [];\n            for(let i =0; i < column_length; ++i) {\n                \n                grid_array.push(\n                <Row key={i}>\n                    {columns(i,column_count,data_array)}\n                </Row>);\n            }\n            return grid_array;\n        }\n        return(\n            <Container className=\"margin\">\n            {\n                    rows(column_length,decoded_array, columnCount)\n            }\n            </Container>\n        );\n    }\n}\n\nexport default HomeImageGrid;","//This function is used as a custom hook, to store and set the necessary info\n//related to the search bar\n\nimport { useState } from \"react\";\n\nconst useSearch = (initialValue) => {\n    //we need two stae variables and functions\n    //for controlled input\n    let [value, setValue] = useState(initialValue);\n    return [{value, onChange: e=>setValue(e.target.value)},\n    ()=>setValue(initialValue)];\n};\n\nexport default useSearch;","import { Button, Container, Nav } from 'react-bootstrap'\nimport { Navbar, Form, FormControl } from 'react-bootstrap'\nimport useSearch from \"./useSearch\";\nimport { Redirect } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from 'axios';\n\nfunction to_url(query) {\n  let encoded_query=encodeURI(query);\n  let url=`https://api.spoonacular.com/recipes/complexSearch?apiKey=145e78a54cd247a3aa402896abfbbc1a&addRecipeInformation=true&addRecipeNutrition=true&query=${encoded_query}&number=1`;\n  return url;\n}\n\nconst AppNavbar = ({changeRecipe=f=>f}) => {\n  let [searchProps, resetSearch] = useSearch(\"\");\n  let [Searched, setSearched] = useState(false);\n\n\n\n  const searchSubmit = (event) => {\n    event.preventDefault();\n    axios\n    .get(to_url(searchProps.value))\n    .then((results)=>{\n      changeRecipe(results);\n    })\n    .catch((error)=>{\n      alert(`Error occurred with request: ${error}`)\n    })\n    setSearched(true);\n    resetSearch();\n  }\n\n  return (\n    <Navbar className=\"border p3\">\n      <Container>\n        <Navbar.Brand href=\"https://davidbakerrobinson.github.io/FrontEnd-Final/#/\">\n          <h2>Food Nutrition</h2>\n        </Navbar.Brand>\n        <Nav.Link href=\"https://davidbakerrobinson.github.io/FrontEnd-Final/#/macro-calculator\"><Button>Macro Calculator</Button></Nav.Link>\n        <Form className=\"d-flex\" onSubmit={searchSubmit}>\n          <FormControl\n          {...searchProps} \n          type=\"search\" \n          aria-label=\"Search\"\n          placeholder=\"Search\"\n          />\n         <Button type=\"submit\" variant=\"outline-success\">Search</Button>\n        </Form>\n      </Container>\n      { Searched && <Redirect to=\"/recipe\" /> }\n    </Navbar>\n  );\n}\n\nexport default AppNavbar;","import HomeImageArray from './HomeImageGrid';\nimport {useState} from 'react';\nimport HomeImageGrid from './HomeImageGrid';\nimport {Collapse, Image, Button} from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport CompareImages from './CompareImages';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport \"./Compare.css\";\n\nconst Home = ({setLink=f=>f, column_count=3, compare, setCompare, setRemoved}) => {\n  let [my_array, set_my_Array] = useState([]);\n  let set_compare =(info)=> {\n    let compare_list = compare.map((item)=>item);\n\n    compare_list.push(info);\n\n    setCompare(compare_list);\n  };\n\n  let remove_compare = (index)=> {\n    let compare_list = compare.map((item)=>item);\n    compare_list.splice(index,1);\n    setCompare(compare_list);\n  };\n\n \n\n  return (\n    <div>\n    <HomeImageGrid \n    stateChange={(array)=>{\n      set_my_Array(array);\n    }} \n    setLink={setLink}\n    columnCount={column_count}\n    toCompare={set_compare}\n    compare={compare}\n    setRemoved={setRemoved}\n    />\n    <Collapse in={compare.length > 0 ? true : false}>\n        <div className=\"fixed-bottom d-flex justify-content-center bottom-box bg-light align-items-center\">\n        {\n          compare.map((item,index)=> {\n            return(\n            <div>\n            <Image key={index} className=\"image-sizing\" src={item.data.results[0].image}/>\n            <Button variant=\"danger\" onClick={()=>remove_compare(index)} >\n            <FontAwesomeIcon icon={faTrashAlt} />\n            </Button>\n            </div>\n            );\n          })\n        }\n        {compare.length > 1 &&\n        <Link to=\"/compare\" id=\"compare-margin\">\n        <Button variant=\"info\">Compare</Button>\n        </Link>\n        }\n      </div>\n    </Collapse>\n    </div>\n  );\n}\n\nexport default Home;","import { useState, useEffect } from 'react';\n\nconst useSearchFood = (name, count) => {\n  const [data, setData] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [empty, setEmpty] = useState(false);\n\n  useEffect(() => {\n    setIsPending(true)\n    const API_KEY = 'tUczyHuY9sF4hO3Ndv4LQbQcwO1xU3ounwk9pbsc';\n    const abortController = new AbortController();\n    const url = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=\" + API_KEY\n      + \"&query=\" + encodeURIComponent(name)\n      + \"&pageSize=\" + count + \"&dataType=Branded\";\n\n    fetch(url, { signal: abortController.signal })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error('Could not fetch the data');\n        }\n        return res.json();\n      })\n      .then((res) => {\n        let data = res.foods.filter((food) =>\n          food.foodNutrients.filter((nutrient) =>\n            nutrient.nutrientName === \"Energy\" && nutrient.unitName.toLowerCase() === \"kcal\"\n          ).length > 0\n        );\n\n        if (data.length === 0) {\n          setEmpty(true);\n          setData([]);\n          setIsPending(false);\n          setError(null);\n        } else {\n          setEmpty(false)\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        }\n      })\n      .catch((err) => {\n        if (err.name === 'AbortError') {\n          console.log('Aborted');\n        } else {\n          setError(err.message);\n          setIsPending(false);\n        }\n      });\n\n    return () => abortController.abort();\n  }, [name, count]);\n\n  return {\n    data,\n    isPending,\n    error,\n    empty\n  };\n};\n\nexport default useSearchFood;","import { Stack, Table } from \"react-bootstrap\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport useSearchFood from \"./useSearchFood\";\nimport { useEffect, useRef, useState } from 'react';\n\nconst AppSearchFood = ({ TDEE }) => {\n  const [query, setQuery] = useState(\"\");\n  const [selections, setSelections] = useState([]);\n  const [totalEnergy, setTotalEnergy] = useState(0);\n\n  const { data, isPending } = useSearchFood(query, 15);\n  const filterBy = () => true;\n  const ref = useRef();\n\n  const onSelect = (options) => {\n    const option = options[0];\n\n    let found = false;\n    setSelections(selections.map((selection) => {\n      const match = selection.fdcId === option.fdcId;\n\n      found |= match;\n      return found\n        ? { ...selection, quantity: selection.quantity + 1 }\n        : { ...selection }\n    }));\n\n    if (!found) {\n      const energy = option.foodNutrients.find((nutrient) =>\n        nutrient.nutrientName === \"Energy\" && nutrient.unitName.toLowerCase() === \"kcal\"\n      ).value;\n\n      const selection = {\n        fdcId: option.fdcId,\n        text: option.description + \" - \" + option.brandOwner,\n        energy: energy,\n        quantity: 1\n      };\n\n      setSelections(prev => [...prev, selection]);\n    }\n\n    ref.current.clear();\n  }\n\n  const updateWithQuantity = (event) => {\n    setSelections(selections.map((selection) =>\n      selection.fdcId === parseInt(event.target.dataset.id)\n        ? { ...selection, quantity: parseInt(event.target.value) }\n        : { ...selection }\n    ));\n  }\n\n  useEffect(() => {\n    let total = selections\n      .map((selection) => {\n        let value = selection.energy * selection.quantity;\n        return value;\n      })\n      .reduce((prev, curr) => {\n        let value = prev + curr;\n        return value;\n      }, 0);\n    setTotalEnergy(total);\n  }, [selections])\n\n  const consumedCal = () => {\n    if (totalEnergy > 0) {\n\n      let result = TDEE - totalEnergy\n      let str = ``;\n      if (result > 0) {\n        str = `You need ${result} calories to maintain your current weight.`\n      } else if (result < 0) {\n        str = `You've eaten more than your maintain calories ${result * (-1)}.`\n      }\n      return <h3 id=\"calorie\">You consumed <span className=\"calorie\">{totalEnergy}</span> kcal. <span className=\"calorie\">{str}</span></h3>\n    }\n  }\n\n  return (\n    <Stack>\n      <h4 className=\"mt-5 text-center\">Add consumed food</h4>\n      <AsyncTypeahead\n        id=\"async-query-food\"\n        filterBy={filterBy}\n        isLoading={isPending}\n        labelKey=\"description\"\n        minLength={3}\n        onSearch={setQuery}\n        onChange={onSelect}\n        options={data}\n        placeholder=\"Milk, Apple,...\"\n        renderMenuItemChildren={(option, props) => (\n          <span>{option.description} - {option.brandOwner}</span>\n        )}\n        ref={ref}\n      />\n\n      {selections.length > 0 &&\n        <Table className=\"mt-3\" striped bordered hover>\n          <thead>\n            <tr>\n              <th className=\"w-50\">Name</th>\n              <th className=\"w-25 text-center\">Energy<br />(each 100g/100ml)</th>\n              <th className=\"w-25 text-center\">Quantity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {selections.map((selection, i) => (\n              <tr key={i}>\n                <td>{selection.text}</td>\n                <td className=\"text-center\">{selection.energy}</td>\n                <td className=\"text-center\"><input type=\"number\" data-id={selection.fdcId} value={selection.quantity} min=\"0\"\n                  onChange={updateWithQuantity} style={{\n                    width: \"40px\"\n                  }} /></td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      }\n      {consumedCal()}\n    </Stack>\n  );\n}\n\nexport default AppSearchFood;","import { Stack, Form, FloatingLabel, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nconst AppTDEE = (props) => {\n  const onTDEE = props.onTDEE;\n\n  const [height, setHeight] = useState('')\n  const [weight, setWeight] = useState('')\n  const [age, setAge] = useState('')\n  const [activityLevel, setActivityLevel] = useState('1')\n  const [gender, setGender] = useState('1')\n\n\n  const calcTDEE = (e) => {\n    e.preventDefault();\n    let BMR;\n    let TDEE;\n    if (gender === '1') {\n      // Male\n      BMR = 66 + (13.7 * parseInt(weight)) + (5 * parseInt(height)) - (6.8 * parseInt(age));\n    } else if (gender === '2') {\n      // Female\n      BMR = 655 + (9.6 * parseInt(weight)) + (1.8 * parseInt(height)) - (4.7 * parseInt(age));\n    }\n\n    let activity;\n    switch (parseInt(activityLevel)) {\n      case 1: activity = 1.2; break;\n      case 2: activity = 1.375; break;\n      case 3: activity = 1.55; break;\n      case 4: activity = 1.725; break;\n      case 5: activity = 1.9; break;\n      default:\n        activity = 1.2;\n    }\n\n    TDEE = parseInt(activity * BMR)\n\n    console.log({ height, weight, age, activityLevel, gender })\n    console.log({ BMR, activity, TDEE });\n\n    onTDEE(TDEE);\n  }\n\n  return (\n    <Stack>\n      <Form onSubmit={calcTDEE}>\n        <FloatingLabel controlId=\"formInput.height\" label=\"Height (cm)\">\n          <Form.Control type=\"number\" min=\"0\" placeholder=\"1\" required\n            onChange={(e) => setHeight(e.target.value)} />\n        </FloatingLabel>\n        <FloatingLabel className=\"mt-3\" controlId=\"formInput.width\" label=\"Weight (kg)\">\n          <Form.Control type=\"number\" min=\"0\" placeholder=\"1\" required\n            onChange={(e) => setWeight(e.target.value)} />\n        </FloatingLabel>\n        <FloatingLabel className=\"mt-3\" controlId=\"formInput.age\" label=\"Age\">\n          <Form.Control type=\"number\" min=\"0\" placeholder=\"1\" required\n            onChange={(e) => setAge(e.target.value)} />\n        </FloatingLabel>\n        <FloatingLabel className=\"mt-3\" controlId=\"formInput.activityLevel\" label=\"Activity\">\n          <Form.Select\n            onChange={(e) => setActivityLevel(e.target.value)}>\n            <option value=\"1\">Sedentary</option>\n            <option value=\"2\">Light Exercise (1-2 days per week)</option>\n            <option value=\"3\">Moderate (3-5 days per week)</option>\n            <option value=\"4\">Heavy (6-7 days per week)</option>\n            <option value=\"5\">Athlete (2x per day)</option>\n          </Form.Select>\n        </FloatingLabel>\n        <Stack direction=\"horizontal\" className=\"mt-3\" key=\"inline-radio\">\n          <Form.Check inline type=\"radio\" label=\"Male\" required value=\"1\" name=\"formInput.gender\"\n            onChange={(e) => setGender(e.target.value)} />\n          <Form.Check inline type=\"radio\" label=\"Female\" required value=\"2\" name=\"formInput.gender\"\n            onChange={(e) => setGender(e.target.value)} />\n        </Stack>\n\n        <Stack>\n          <Button className=\"mt-3 align-self-center\" type=\"submit\">Calculate</Button>\n        </Stack>\n      </Form>\n    </Stack>\n  );\n}\n\nexport default AppTDEE;","import { Stack } from \"react-bootstrap\";\nimport AppSearchFood from \"./AppSearchFood\";\nimport AppTDEE from \"./AppTDEE\";\nimport { useState } from \"react\";\n\nconst MacroCalculator = () => {\n  const [tdee, setTDEE] = useState('TBD')\n\n  return (\n    <div>\n      <h4>Total Daily Energy Expenditure(TDEE)</h4>\n      <Stack direction=\"horizontal\" gap={3}>\n        <Stack className=\"border p-3 align-self-start w-50\">\n          <AppTDEE onTDEE={setTDEE} />\n        </Stack>\n\n        <Stack className=\"align-self-start w-50\">\n          <Stack className=\"border p-3 text-center\">\n            <h4>Maintenance Calories</h4>\n            <h4 style={{\n              color: \"red\"\n            }}>{tdee}</h4>\n            <h4>Calories per day</h4>\n          </Stack>\n\n          <AppSearchFood TDEE={tdee} />\n        </Stack>\n      </Stack>\n    </div>\n  );\n}\n\nexport default MacroCalculator;","import { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Card, ListGroup, Table, Form, FormControl, Button } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport \"./Recipe.css\";\n\n\nconst RecipeBody = ({info, changeIngredient=f=>f, showButton=false, forcompare=false}) => {\n    let ingredients = info.data.results[0].nutrition.ingredients;\n    let recipe_steps_arr=info.data.results[0].analyzedInstructions[0].steps;\n    let nutrients_array = info.data.results[0].nutrition.nutrients;\n    console.log(nutrients_array);\n    let recipe_steps = recipe_steps_arr.map((item)=>{\n        return item.step;\n    });\n    let ingredients_arr = ingredients.map((item)=>{\n      return item.name;\n    });\n\n    return (\n    <Container fluid>\n\n    <Row className=\"p-10\">\n      <Col></Col>\n      <Col xs={12} md={6} className=\"d-flex justify-content-center\"> \n    <img className=\"w-100\" src={info.data.results[0].image} alt=\"food\"/>\n       </Col> \n       <Col></Col>\n    </Row>\n    { showButton &&\n    <Row>\n      <Col></Col>\n    <Col xs={12} sm={6}>\n        {/* <Form> */}\n          {/* <Form.Check type=\"checkbox\">\n            <Form.Check.Input type=\"checkbox\" isValid />\n            <Form.Check.Label className=\"button-margin\">Add to Home Page</Form.Check.Label>\n          </Form.Check>\n        </Form> */}\n        <Link to=\"/\">\n        <Button \n        variant=\"outline-success\"\n        onClick={()=>\n        { //setAdd(true)\n          let homepage = sessionStorage.getItem(\"Home_Page_Array\");\n          let old_home = JSON.parse(homepage);\n          old_home.unshift(info);\n          let new_home = JSON.stringify(old_home);\n          sessionStorage.setItem(\"Home_Page_Array\",new_home);\n        }\n        }>\n          Add To HomePage\n        </Button>\n        </Link>\n      </Col>\n    <Col></Col>\n    </Row>  \n    }    \n      \n    <Row>\n      <Col sm={2}>\n      </Col>\n      <Col xs={12} md={8} className=\"d-flex justify-content-center\" >\n        <h1 className=\"text-center\">{info.data.results[0].title}</h1>\n      </Col>\n      <Col>\n      </Col>\n    </Row> \n  {forcompare===false &&\n    <Row>\n      <Col xs={12} md={4}>\n      <Card className=\"w-100\">\n      <Card.Body>\n        <Card.Header>Ingredients</Card.Header>\n        <ListGroup variant=\"flush\">\n        {\n        ingredients_arr.map((item,index)=>{\n        return(<ListGroup.Item key={index} action onClick={()=>changeIngredient(item)}>\n          <Link to={`/ingredient/${item}`}>\n          {item}\n          </Link>\n          </ListGroup.Item>);\n        })\n        }      \n        </ListGroup>\n      </Card.Body>\n      </Card>\n      </Col>\n   \n    <Col xs={12} md={4}>\n\n        <Card className=\"w-100\">\n          <Card.Title>Recipe</Card.Title>\n          <Card.Subtitle>Steps</Card.Subtitle>\n          <ListGroup variant=\"flush\">\n            {\n            recipe_steps.map((item, index) => {\n            return(<ListGroup.Item key={index}>{item}</ListGroup.Item>)\n            })\n            }\n          </ListGroup>\n\n        </Card>\n        </Col>\n      <Col xs={12} md={4}>\n        <Card className=\"w-100\">\n            <Table>\n              <thead>\n                <tr>\n                  <th>Nutrient</th>\n                  <th>Amount(units)</th>\n                </tr>\n              </thead>\n              <tbody>\n              {\n                nutrients_array.map((item,index) => {\n                return(<tr key={index}>   \n                  <td>{item.name}</td>\n                  <td>{item.amount}({item.unit})</td>\n                </tr>)\n                })\n              }\n              </tbody>\n            </Table>\n        </Card>\n      </Col>\n    </Row>\n}\n{\n    forcompare===true &&\n       <Row>\n      <Col xs={12}>\n      <Card className=\"w-100\">\n      <Card.Body>\n        <Card.Header>Ingredients</Card.Header>\n        <ListGroup variant=\"flush\">\n        {\n        ingredients_arr.map((item,index)=>{\n        return(<ListGroup.Item key={index} action onClick={()=>changeIngredient(item)}>\n          <Link to={`/ingredient/${item}`}>\n          {item}\n          </Link>\n          </ListGroup.Item>);\n        })\n        }      \n        </ListGroup>\n      </Card.Body>\n      </Card>\n      </Col>\n   \n    <Col xs={12}>\n\n        <Card className=\"w-100\">\n          <Card.Title>Recipe</Card.Title>\n          <Card.Subtitle>Steps</Card.Subtitle>\n          <ListGroup variant=\"flush\">\n            {\n            recipe_steps.map((item, index) => {\n            return(<ListGroup.Item key={index}>{item}</ListGroup.Item>)\n            })\n            }\n          </ListGroup>\n\n        </Card>\n        </Col>\n      <Col xs={12}>\n        <Card className=\"w-100\">\n            <Table>\n              <thead>\n                <tr>\n                  <th>Nutrient</th>\n                  <th>Amount(units)</th>\n                </tr>\n              </thead>\n              <tbody>\n              {\n                nutrients_array.map((item,index) => {\n                return(<tr key={index}>   \n                  <td>{item.name}</td>\n                  <td>{item.amount}({item.unit})</td>\n                </tr>)\n                })\n              }\n              </tbody>\n            </Table>\n        </Card>\n      </Col>\n    </Row> \n}\n</Container>\n);\n}\n\nexport default RecipeBody;","import { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Card, ListGroup, Table, Form, FormControl, Button } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport \"./Recipe.css\";\nimport RecipeBody from './RecipeBody';\n\n\nconst Recipe = ({info, changeIngredient=f=>f}) => {\n\n\n  if(info != null) {\n    if(info.data.totalResults === 0) {\n      return (<h1>No Results were found for your search</h1>);\n    }\n    // add the result to the homepage\n    // if(add === true) {\n\n    // let homepage = sessionStorage.getItem(\"Home_Page_Array\");\n    // let old_home = JSON.parse(homepage);\n    // old_home.unshift(info);\n    // let new_home = JSON.stringify(old_home);\n    // sessionStorage.setItem(\"Home_Page_Array\",new_home);\n    //   return <Redirect to=\"/\" />\n    //   }\n       \n\n    let ingredients = info.data.results[0].nutrition.ingredients;\n    let recipe_steps_arr=info.data.results[0].analyzedInstructions[0].steps;\n    let nutrients_array = info.data.results[0].nutrition.nutrients;\n    console.log(nutrients_array);\n    let recipe_steps = recipe_steps_arr.map((item)=>{\n        return item.step;\n    });\n    let ingredients_arr = ingredients.map((item)=>{\n      return item.name;\n    });\n    //if totalResults = 0, return a message about that\n\n    return (\n      \n      <RecipeBody info={info} changeIngredient={changeIngredient} showButton={true}/> \n    //   <Container fluid>\n\n    //     <Row className=\"p-10\">\n    //       <Col></Col>\n    //       <Col xs={12} md={6} className=\"d-flex justify-content-center\"> \n    //     <img className=\"w-100\" src={info.data.results[0].image} alt=\"food\"/>\n    //        </Col> \n    //        <Col></Col>\n    //     </Row>\n    //     <Row>\n    //       <Col></Col>\n    //     <Col xs={12} sm={6}>\n    //         {/* <Form> */}\n    //           {/* <Form.Check type=\"checkbox\">\n    //             <Form.Check.Input type=\"checkbox\" isValid />\n    //             <Form.Check.Label className=\"button-margin\">Add to Home Page</Form.Check.Label>\n    //           </Form.Check>\n    //         </Form> */}\n    //         <Link to=\"/\">\n    //         <Button \n    //         variant=\"outline-success\"\n    //         onClick={()=>\n    //         { //setAdd(true)\n    //           let homepage = sessionStorage.getItem(\"Home_Page_Array\");\n    //           let old_home = JSON.parse(homepage);\n    //           old_home.unshift(info);\n    //           let new_home = JSON.stringify(old_home);\n    //           sessionStorage.setItem(\"Home_Page_Array\",new_home);\n    //         }\n    //         }>\n    //           Add To HomePage\n    //         </Button>\n    //         </Link>\n    //       </Col>\n    //     <Col></Col>\n    //     </Row>      \n          \n    //     <Row>\n    //       <Col sm={2}>\n    //       </Col>\n    //       <Col xs={12} md={8} className=\"d-flex justify-content-center\" >\n    //         <h1 className=\"text-center\">{info.data.results[0].title}</h1>\n    //       </Col>\n    //       <Col>\n    //       </Col>\n    //     </Row> \n      \n    //     <Row>\n    //       <Col xs={12} md={4}>\n    //       <Card className=\"w-100\">\n    //       <Card.Body>\n    //         <Card.Header>Ingredients</Card.Header>\n    //         <ListGroup variant=\"flush\">\n    //         {\n    //         ingredients_arr.map((item,index)=>{\n    //         return(<ListGroup.Item key={index} action onClick={()=>changeIngredient(item)}>\n    //           <Link to={`/ingredient/${item}`}>\n    //           {item}\n    //           </Link>\n    //           </ListGroup.Item>);\n    //         })\n    //         }      \n    //         </ListGroup>\n    //       </Card.Body>\n    //       </Card>\n    //       </Col>\n       \n    //     <Col xs={12} md={4}>\n \n    //         <Card className=\"w-100\">\n    //           <Card.Title>Recipe</Card.Title>\n    //           <Card.Subtitle>Steps</Card.Subtitle>\n    //           <ListGroup variant=\"flush\">\n    //             {\n    //             recipe_steps.map((item, index) => {\n    //             return(<ListGroup.Item key={index}>{item}</ListGroup.Item>)\n    //             })\n    //             }\n    //           </ListGroup>\n\n    //         </Card>\n    //         </Col>\n    //       <Col xs={12} md={4}>\n    //         <Card className=\"w-100\">\n    //             <Table>\n    //               <thead>\n    //                 <tr>\n    //                   <th>Nutrient</th>\n    //                   <th>Amount(units)</th>\n    //                 </tr>\n    //               </thead>\n    //               <tbody>\n    //               {\n    //                 nutrients_array.map((item,index) => {\n    //                 return(<tr key={index}>   \n    //                   <td>{item.name}</td>\n    //                   <td>{item.amount}({item.unit})</td>\n    //                 </tr>)\n    //                 })\n    //               }\n    //               </tbody>\n    //             </Table>\n    //         </Card>\n    //       </Col>\n    //     </Row>\n    // </Container>\n    );\n  }\n  else {\n    return (<h1>Loading...</h1>);\n  }\n}\n\nexport default Recipe;","import { useState, useEffect } from 'react';\n\nconst usePixaBay = (query, count) => {\n  const [data, setData] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [empty, setEmpty] = useState(false);\n\n  if (count < 3) {\n    count = 3; // minimum required by PixaBay\n  }\n\n  useEffect(() => {\n    const API_KEY = '24408638-26cdd708596774f885af10e46';\n    const abortController = new AbortController();\n    const url = \"https://pixabay.com/api/?key=\" + API_KEY + \"&q=\" + encodeURIComponent(query)\n      + \"&per_page=\" + count + \"&category=food\";\n\n    fetch(url, { signal: abortController.signal })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error('Could not fetch the data');\n        }\n        return res.json();\n      })\n      .then((res) => {\n        let data = res.hits.map((photo) => {\n          return photo.webformatURL;\n        });\n\n        if (data.length === 0) {\n          setEmpty(true);\n          setData([]);\n          setIsPending(false);\n          setError(null);\n        } else {\n          setEmpty(false)\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        }\n      })\n      .catch((err) => {\n        if (err.name === 'AbortError') {\n          console.log('Aborted');\n        } else {\n          setError(err.message);\n          setIsPending(false);\n        }\n      });\n\n    return () => abortController.abort();\n  }, [query, count]);\n\n  return {\n    data,\n    isPending,\n    error,\n    empty\n  };\n};\n\nexport default usePixaBay;","import { Stack, Carousel, Alert, Placeholder } from \"react-bootstrap\";\nimport usePixaBay from \"./usePixaBay\";\n\nconst AppFoodCarousel = (props) => {\n  const name = props.name;\n  const { data, isPending, error, empty } = usePixaBay(name, 3);\n  return (\n    <Stack>\n      {error &&\n        <Alert>{error}</Alert>\n      }\n      {isPending &&\n        <Placeholder as=\"p\" animation=\"glow\">\n          <Placeholder xs={12} />\n        </Placeholder>\n      }\n      {empty &&\n        <p>No photo to show.</p>\n      }\n      {data.length > 0 &&\n        <Carousel variant=\"dark\">\n          {data.map((link, i) => (\n            <Carousel.Item key={i}>\n              <img src={link} alt=\"Sample\" />\n            </Carousel.Item>\n          ))}\n        </Carousel>\n      }\n    </Stack>\n  );\n}\n\nexport default AppFoodCarousel;","import { useState, useEffect } from 'react';\n\nconst useSearchNutrients = (name) => {\n  const [data, setData] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [empty, setEmpty] = useState(false);\n\n  useEffect(() => {\n    const API_KEY = 'tUczyHuY9sF4hO3Ndv4LQbQcwO1xU3ounwk9pbsc';\n    const abortController = new AbortController();\n    const url = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=\" + API_KEY\n      + \"&query=\" + encodeURIComponent(name)\n      + \"&pageSize=1&dataType=SR%20Legacy\";\n\n    fetch(url, { signal: abortController.signal })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error('Could not fetch the data');\n        }\n        return res.json();\n      })\n      .then((res) => {\n        if (res.foods.length === 0) {\n          setEmpty(true);\n          setData([]);\n          setIsPending(false);\n          setError(null);\n        } else {\n          setEmpty(false)\n          setData(res.foods[0].foodNutrients.filter((nutrient) => nutrient.value > 0));\n          setIsPending(false);\n          setError(null);\n        }\n      })\n      .catch((err) => {\n        if (err.name === 'AbortError') {\n          console.log('Aborted');\n        } else {\n          setError(err.message);\n          setIsPending(false);\n        }\n      });\n\n    return () => abortController.abort();\n  }, [name]);\n\n  return {\n    data,\n    isPending,\n    error,\n    empty\n  };\n};\n\nexport default useSearchNutrients;","import { Stack, Table, Alert, Placeholder } from \"react-bootstrap\";\nimport useSearchNutrients from \"./useSearchNutrients\";\n\nconst AppFoodNutrients = (props) => {\n  const name = props.name;\n\n  const { data, isPending, error, empty } = useSearchNutrients(name);\n  const unitNameFormat = (value) => {\n    switch (value) {\n      case \"kJ\":\n        return \"kJ\";\n      case \"J\":\n        return \"J\";\n      case \"UG\":\n        return \"µg\";\n      default:\n        return value.toLowerCase();\n    }\n  }\n\n  const filterNutrition = () => {\n    let resultFilter = null;\n    if (data !== null) {\n      resultFilter = data.map((nutrient, i) => {\n        if (nutrient.nutrientName.toLowerCase().includes('protein') ||\n          nutrient.nutrientName.toLowerCase().includes('carb') || nutrient.nutrientName.toLowerCase().includes('lipid')) {\n          return (<tr key={i}>\n            <td>{nutrient.nutrientName}</td>\n            <td>{nutrient.value}</td>\n            <td>{unitNameFormat(nutrient.unitName)}</td>\n          </tr>)\n        }\n      })\n    }\n    console.log(resultFilter)\n    return resultFilter;\n  }\n\n\n  return (\n    <Stack>\n      {error &&\n        <Alert>{error}</Alert>\n      }\n      {isPending &&\n        <Placeholder as=\"p\" animation=\"glow\">\n          <Placeholder xs={12} />\n        </Placeholder>\n      }\n      {empty &&\n        <p>No nutrients to show.</p>\n      }\n      {data.length > 0 &&\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th className=\"w-50\">Name</th>\n              <th className=\"w-25\">Amount</th>\n              <th className=\"w-25\">Unit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data && filterNutrition()}\n          </tbody>\n        </Table>\n      }\n    </Stack>\n\n  );\n}\n\nexport default AppFoodNutrients;\n","import { useState, useEffect } from 'react';\n\nconst useSpoonacular = (ingredient, count) => {\n  const [data, setData] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const [empty, setEmpty] = useState(false);\n\n  useEffect(() => {\n    const API_KEY = '512a6c36ad624fbf89471ffccafe02f0';\n    const abortController = new AbortController();\n    const url = \"https://api.spoonacular.com/recipes/findByIngredients?apiKey=\" + API_KEY\n      + \"&ingredients=\" + encodeURIComponent(ingredient)\n      + \"&number=\" + count;\n\n    fetch(url, { signal: abortController.signal })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error('Could not fetch the data');\n        }\n        return res.json();\n      })\n      .then((res) => {\n        let data = res;\n\n        if (data.length === 0) {\n          setEmpty(true);\n          setData([]);\n          setIsPending(false);\n          setError(null);\n        } else {\n          setEmpty(false)\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        }\n      })\n      .catch((err) => {\n        if (err.name === 'AbortError') {\n          console.log('Aborted');\n        } else {\n          setError(err.message);\n          setIsPending(false);\n        }\n      });\n\n    return () => abortController.abort();\n  }, [ingredient, count]);\n\n  return {\n    data,\n    isPending,\n    error,\n    empty\n  };\n};\n\nexport default useSpoonacular;","import { Row, Col, Figure, Stack, Alert, Placeholder } from \"react-bootstrap\";\nimport useSpoonacular from \"./useSpoonacular\";\n\nconst AppSpoonacularFoodGallery = (props) => {\n  const name = props.name;\n  const { data, isPending, error, empty } = useSpoonacular(name, 3);\n\n  return (\n    <Stack>\n      <h4 className=\"mt-5\">Recipe</h4>\n      {error &&\n        <Alert>{error}</Alert>\n      }\n      {isPending &&\n        <Placeholder as=\"p\" animation=\"glow\">\n          <Placeholder xs={12} />\n        </Placeholder>\n      }\n      {empty &&\n        <p>No recipe to show.</p>\n      }\n      {data.length > 0 &&\n        <Row>\n          {data.map((recipe, i) => (\n            <Col key={i}>\n              <Stack>\n                <Figure>\n                  <Figure.Image src={recipe.image} thumbnail style={{\n                    height: \"180px\",\n                    width: \"auto\",\n                    objectFit: \"cover\"\n                  }} />\n                  <Figure.Caption>{recipe.title}</Figure.Caption>\n                </Figure>\n              </Stack>\n            </Col>\n          ))}\n        </Row>\n      }\n    </Stack>\n  );\n}\n\nexport default AppSpoonacularFoodGallery;","import { Stack } from \"react-bootstrap\";\nimport AppFoodCarousel from \"./AppFoodCarousel\";\nimport AppFoodNutrients from \"./AppFoodNutrients\";\nimport AppSpoonacularFoodGallery from \"./AppSpoonacularFoodGallery\";\n\nconst Ingredient = ({ ingredientName }) => {\n  //The argument is from the Recipe page that you clicked\n\n  return (\n    <Stack className=\"mt-5 text-center\" direction=\"horizontal\" gap=\"3\">\n      <Stack className=\"w-75 align-self-start\">\n        <h4>{ingredientName}</h4>\n        <AppFoodCarousel name={ingredientName} />\n        <AppSpoonacularFoodGallery name={ingredientName} />\n      </Stack>\n      <Stack className=\"w-25\">\n        <h4>Nutrition Facts</h4>\n        <AppFoodNutrients name={ingredientName} />\n      </Stack>\n    </Stack>\n  );\n}\n\nexport default Ingredient;","import RecipeBody from \"./RecipeBody\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Row, Container, Col} from \"react-bootstrap\";\n\nexport default function Compare({compare}) {\n    return(\n    <div>\n    <Container>\n        <Row>      \n      \n        {\n    compare.map((item, index)=> {\n        return(\n        <Col>\n        <RecipeBody key={index} info={item} forcompare={true} />\n        </Col>\n        )\n    })\n    }\n        </Row>\n    </Container>    \n    </div>\n    );\n}","import './App.css';\nimport HomeImageArray from './HomeImageGrid';\nimport { useState } from 'react';\nimport AppNavbar from './AppNavbar';\nimport Home from './Home';\nimport MacroCalculator from './MacroCalculator';\nimport Recipe from './Recipe'\nimport Ingredient from './Ingredient'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container } from 'react-bootstrap';\nimport Compare from \"./Compare\";\n\nfunction App() {\n  //passed into Home, so image click will convey the necessary info\n  //also passed into Recipe, which displays the info\n  let [recipeInfo, setrecipeInfo] = useState(null);\n  //let [recipeSearched, setRecipeSearched] = useState(false);\n  let [ingredientName, setIngredientName] = useState(\"\");\n  let [compare,setCompare] = useState([]);\n  let [removed, setRemoved] = useState(false);\n\n  // let set_compare =(info)=> {\n  //   let compare_list = my_array.map((item)=>item);\n  //   console.log(`Before it is: ${my_array}`);\n  //   compare_list.push(info);\n  //   console.log(\"This is my list to compare\" + compare_list);\n  //   setCompare(compare_list);\n  // }\n\n  return (\n    <Container className=\"mt-3 mb-3\">\n      <Router basename=\"/FrontEnd-Final\">\n        <AppNavbar changeRecipe={(recipe) => setrecipeInfo(recipe)} />\n        <div className=\"content mt-3\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home setLink={(info)=>setrecipeInfo(info)}  compare={compare} setCompare={setCompare} setRemoved={()=>setRemoved(!removed)} info={recipeInfo} column_count={3} />\n            </Route>\n            <Route path=\"/recipe\">\n              <Recipe\n                info={recipeInfo}\n                changeIngredient={(ingredient) => setIngredientName(ingredient)}\n               />\n            </Route>\n            <Route path=\"/compare\">\n              <Compare compare={compare} />\n            </Route>\n            <Route path=\"/ingredient/\">\n              <Ingredient ingredientName={ingredientName} />\n            </Route>\n            <Route path=\"/macro-calculator\">\n              <MacroCalculator />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}